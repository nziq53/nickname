on: [push, pull_request]

jobs:
    build_cache:
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                release:
                    - { name: release }
                    - { name: debug }
                version: [1.68.0, stable, beta, nightly]
        runs-on: ${{ matrix.os }}
        steps:
            - uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - uses: ./.github/actions/install_rust_by_version
            - uses: ./.github/actions/cache_cargo
            - name: build
              run: cargo build
            - uses: ./.github/actions/rm_cache_cargo

    fmt:
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                release:
                    - { name: debug }
                version: [1.68.0, stable, beta, nightly]
        runs-on: ${{ matrix.os }}
        needs: build_cache
        steps:
            - uses: actions/checkout@v3
            - run: rustup component add rustfmt
            - uses: ./.github/actions/install_rust_by_version
            - uses: ./.github/actions/cache_cargo
            - name: install fmt
              run: rustup component add rustfmt
            - name: fmt
              run: cargo fmt --all -- --check
            - uses: ./.github/actions/rm_cache_cargo

    clippy:
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                release:
                    - { name: debug }
                version: [1.68.0, stable, beta, nightly]
        runs-on: ${{ matrix.os }}
        env:
            RUSTC_FORCE_INCREMENTAL: 1
        needs: build_cache
        steps:
            - uses: actions/checkout@v3
            - run: rustup component add clippy
            - uses: ./.github/actions/install_rust_by_version
            - uses: ./.github/actions/cache_cargo
            - name: install clippy
              run: rustup component add clippy-preview
            - name: clippy
              run: cargo clippy --all-targets --all-features -- -D warnings
            - uses: ./.github/actions/rm_cache_cargo

    test:
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                release:
                    - { name: release }
                    - { name: debug }
                version: [1.68.0, stable, beta, nightly]
        runs-on: ${{ matrix.os }}
        needs: build_cache
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/install_rust_by_version
            - uses: ./.github/actions/cache_cargo
            - name: test release
              if: matrix.release.name == 'release'
              run: cargo test --all --release -- --nocapture
            - name: test debug
              if: matrix.release.name == 'debug'
              run: cargo test --all -- --nocapture
            - uses: ./.github/actions/rm_cache_cargo

    run:
        strategy:
            matrix:
                os: [ubuntu-latest, macos-latest, windows-latest]
                release:
                    - { name: release }
                    - { name: debug }
                version: [1.68.0, stable, beta, nightly]
        runs-on: ${{ matrix.os }}
        needs: build_cache
        steps:
            - uses: actions/checkout@v3
            - uses: ./.github/actions/install_rust_by_version
            - uses: ./.github/actions/cache_cargo
            - name: run release
              if: matrix.release.name == 'release'
              run: |
                  cargo build --release
                  cargo run --release > ${{ matrix.os }}-${{ matrix.version }}-${{ matrix.release.name }}-run.log
              working-directory: ./examples/pc
              continue-on-error: true
            - name: run debug
              if: matrix.release.name == 'debug'
              run: |
                  cargo build
                  cargo run > ${{ matrix.os }}-${{ matrix.version }}-${{ matrix.release.name }}-run.log
              working-directory: ./examples/pc
              continue-on-error: true
            - uses: ./.github/actions/rm_cache_cargo
            - name: Upload log on run
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ matrix.os }}-${{ matrix.version }}-${{ matrix.release.name }}-run.log
                  path: ./examples/pc/${{ matrix.os }}-${{ matrix.version }}-${{ matrix.release.name }}-run.log

    concat_logs:
        runs-on: ubuntu-latest
        needs: [build_cache, run]
        steps:
            - name: Download artifacts on run
              uses: actions/download-artifact@v3
              with:
                  path: artifacts
            - name: Concatenate logs
              run: |
                  os=("ubuntu-latest" "macos-latest" "windows-latest")
                  release=("release" "debug")
                  version=("1.68.0" "stable" "beta" "nightly")

                  echo "" > all-logs.txt
                  for o in "${os[@]}"; do
                    for r in "${release[@]}"; do
                      for v in "${version[@]}"; do
                        log="artifacts/${o}-${v}-${r}-run.log"
                        cat "$log" >> all-logs.txt
                      done
                    done
                  done
            - name: Upload concatenated log
              uses: actions/upload-artifact@v2
              with:
                  name: all-logs
                  path: all-logs.txt
# https://zenn.dev/naokifujita/articles/c890954165c21f
# https://github.com/actix/actix-web/blob/master/.github/workflows/ci.yml
