name: cache_cargo
description: caching .cargo directory
runs:
  using: composite

  steps:
    # Fix timestamps
    - uses: cargo-bins/cargo-binstall@mains
    - name: restore timestamps
      uses: chetan/git-restore-mtime-action@v2
    - name: Cache cargo registry pc-test
      if: runner.prefix == 'pc-test'
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-${{ runner.version }}-${{ runner.prefix }}-${{ runner.target }}-${{ runner.api-level }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-${{ runner.version }}-${{ runner.prefix }}-${{ runner.target }}-${{ runner.api-level }}-cargo-
    - name: Cache cargo registry pc-run
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          examples/pc/target/
        key: ${{ runner.os }}-${{ runner.version }}-${{ runner.prefix }}-${{ runner.target }}-${{ runner.api-level }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: ${{ runner.os }}-${{ runner.version }}-${{ runner.prefix }}-${{ runner.target }}-${{ runner.api-level }}-cargo-

  post:
    - name: Clear the cargo caches powershell
      if: ${{ matrix.os == 'windows-latest' }}
      shell: powershell
      run: |
        cargo install cargo-cache --no-default-features --features ci-autoclean --force --debug
        cargo-cache
    - name: Clear the cargo caches bash
      if: ${{ matrix.os != 'windows-latest' }}
      shell: bash
      run: |
        cargo install cargo-cache --no-default-features --features ci-autoclean --force --debug
        cargo-cache


# https://zenn.dev/naokifujita/articles/c890954165c21f
# https://zenn.dev/kt3k/articles/d557cc874961ab
# https://github.com/marketplace/actions/git-restore-mtime
